<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAgAA
        AAIAAAACAAAAAQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAADAAAABQAA
        AAcAAAAIAAAACQAAAAkAAAAIAAAABgAAAAUAAAADAAAAAgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAGAAAACgAA
        AA8AAAATAAAAFwAAABkAAAAbAAAAGwAAABkAAAAWAAAAEgAAAA0AAAAIAAAABQAAAAIAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAFAAAACwAA
        ABMAAAAcAAAAKAAAADQAAAA8AAAAQQAAAEEAAAA+AAAAOQAAADIAAAAsAAAAJAAAABoAAAARAAAACQAA
        AAQAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAABwAA
        ABAAAAAfAAAAOwAAAF4AAAB8AAAAjQAAAJcAAACcAAAAmwAAAJUAAACMAAAAegAAAGIAAABKAAAAOAAA
        ACkAAAAaAAAADgAAAAYAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAkAAAAUAAAANgAAAGsAAACVAgICqwMDA7QDAwO4AwMDuQMDA7kDAwO5AwMDugMDA7oDAwO5AAAAsAAA
        AJoAAAByAAAATAAAADUAAAAhAAAAEQAAAAcAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAAIAAAAGQAAAE4AAACMCwsLrS4uLsZaWlrhZGRk6WNjY+pjY2PrY2Nj62NjY+tjY2PrY2Nj62Ji
        YupAQEDZFhYWxwEBAbYAAACSAAAAXgAAADwAAAAkAAAAEgAAAAcAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAABwAAABkAAABbBAQEmicnJ7toaGjmhISE+4yMjP+cnJz/srKy/8DAwP/IyMj/xcXF/7q6
        uv+mpqb/k5OT/4WFhf51dXX1Pj4+2goKCsEAAACjAAAAZwAAAD4AAAAkAAAAEAAAAAUAAAABAAAAAAAA
        AAAAAAAAAAAAAQAAAAUAAAATAAAAWQICApolJSXGSEhI9U1NTf9wcHD/xcXF//T09P/+/v7/////////
        ////////+fn5/+3t7f/Z2dn/t7e3/5SUlP99fX39W1tb6BAQEMUAAACmAAAAZgAAADsAAAAfAAAADAAA
        AAMAAAAAAAAAAAAAAAAAAAADAAAACwAAAEgCAgKTFBQUxhYWFvg2Njb/S0tL/yYmJv9OTk7/x8fH/+Tk
        5P/FxcX/nJyc/3V1df9ZWVn/SUlJ/0hISP9lZWX/cHBw/zY2Nv9SUlL+VVVV6woKCsUAAACgAAAAWgAA
        ADIAAAAXAAAACAAAAAIAAAAAAAAAAAAAAAUAAAApAAAAgjk5Obs3Nzf0Dg4O/15eXv+FhYX+Pj4+/gEB
        Af8eHh7/Kioq/w4ODv8BAQH/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/R0dH/2FhYf8qKir+JCQk5gIC
        AsAAAACLAAAARwAAACUAAAAOAAAABAAAAAAAAAAAAAAADwAAAF8SEhKeb29v5Xp6ev9oaGj/TExM/zg4
        OP42Njb+MTEx/gYGBv8NDQ3/XFxc/3p6ev+IiIj/lJSU/5qamv+ampr/jo6O/2FhYf8/Pz//UVFR/0JC
        Qv9bW1v8Ly8v1QAAALEAAABoAAAAMwAAABcAAAAHAAAAAQAAAAAAAAAuAAAAgSoqKq2BgYH5sbGx//n5
        +f/29vb/7e3t/+zs7P/d3d3/Ojo6/wgICP+pqan/////////////////////////////////+vr6/729
        vf9aWlr/WVlZ/2VlZf9xcXHyEhISxQAAAI4AAABCAAAAHwAAAAoAAAACAAAAAAAAAFcAAACNKSkpr4yM
        jPnh4eH///////////////////////////+CgoL/AAAA/1NTU//19fX/////////////////////////
        /////////////9TU1P+fn5//nZ2d/4ODg/0xMTHTAAAAqAAAAFUAAAAnAAAADwAAAAMAAAAAAAAAdQAA
        AI8nJyewpqam+fr6+v///////////////////////////8XFxf8RERH/FBQU/8fHx///////////////
        ///////////////////////////////////U1NT/ioqK/1hYWOUBAQG1AAAAaQAAACwAAAASAAAABAAA
        AAEAAACDAAAAjykpKbDDw8P5////////////////////////////////7e3t/zs7O/8AAAD/gYGB////
        /////////////////////////////////////////////+zs7P+Xl5f/ZGRk6wMDA7kAAAB5AAAAMAAA
        ABQAAAAFAAAAAQAAAIQAAACPLi4usNbW1vn////////////////////////////////9/f3/a2tr/wAA
        AP9DQ0P/8PDw////////////////////////////////////////////9/f3/6Ojo/9jY2PrAwMDugAA
        AIMAAAAyAAAAFQAAAAYAAAABAAAAhAAAAI8yMjKw39/f+f//////////////////////////////////
        //+ioqL/AwMD/xcXF//Nzc3////////////////////////////////////////////7+/v/q6ur/2Nj
        Y+sDAwO6AAAAiAAAADMAAAAVAAAABgAAAAEAAACEAAAAjzIyMrDf39/5////////////////////////
        ///9/f3/3t7e/4SEhP8JCQn/AgIC/2FhYf+2trb/5OTk//39/f////////////////////////////v7
        +/+rq6v/Y2Nj6wMDA7kAAACHAAAAMQAAABMAAAAFAAAAAQAAAIMAAACOLi4usNbW1vn/////////////
        /////////Pz8/56env8nJyf/Gxsb/xsbG/8AAAD/FRUV/zMzM/4xMTH/e3t7/93d3f//////////////
        ////////9/f3/6Ojo/9jY2PqAwMDuAAAAH8AAAAsAAAAEQAAAAQAAAAAAAAAgQAAAIwpKSmuw8PD+f//
        ///////////////////m5ub/Ly8v/wkJCf+hoaH/g4OD/wAAAP8pKSn/wcHB/29vb/8JCQn/NTU1/8PD
        w//////////////////t7e3/l5eX/2RkZOoDAwO1AAAAcAAAACUAAAANAAAAAwAAAAAAAABxAAAAiSgo
        KKynp6f5+vr6//////////////////Dw8P9LS0v/HR0d/9zc3P/Hx8f/ExMT/wkJCf+zs7P/9vb2/25u
        bv8BAQH/NjY2/9zc3P///////////9TU1P+Li4v/XV1d4wICAqsAAABZAAAAHAAAAAkAAAACAAAAAAAA
        AFAAAACEKysrqIyMjPnh4eH//////////////////////9LS0v9xcXH+0dHR//f39/9TU1P/AAAA/2Rk
        ZP/8/Pz/4ODg/zExMf8AAAD/hISE///////6+vr/ra2t/4ODg/04ODjNAAAAlwAAADwAAAAUAAAABgAA
        AAEAAAAAAAAAJQAAAHYsLCyjgYGB+LCwsP/5+fn///////////////////////r6+v/6+vr//////7Ky
        sv8NDQ3/Hx8f/9HR0f//////cnJy/wAAAP9NTU3/9vb2/9jY2P+NjY3/dXV18hgYGLcAAABzAAAAIwAA
        AAwAAAADAAAAAAAAAAAAAAAHAAAAUxUVFZFzc3PjjIyM/8nJyf/9/f3/////////////////////////
        ////////9vb2/21tbf8CAgL/YGBg/unp6f9/f3/+AAAA/09PT//g4OD/nZ2d/4KCgvw9PT3LAAAAmQAA
        AEIAAAATAAAABgAAAAEAAAAAAAAAAAAAAAAAAAAdAAAAcUFBQa+BgYH3kJCQ/9HR0f/9/f3/////////
        ////////////////////////6Ojo/2xsbP4ZGRn/Ojo6/yMjI/8ZGRn/jIyM/6enp/+Hh4f/YmJi4QoK
        CqgAAABlAAAAHAAAAAoAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAA2BAQEflJSUr2EhIT6j4+P/8TE
        xP/29vb/////////////////////////////////9vb2/8TExP+ZmZn/l5eX/6ioqP+bm5v/iIiI/25u
        bukZGRmvAAAAegAAACgAAAAMAAAABAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAABCCgoKg09P
        T7uAgID1ioqK/6ampv/V1dX/8vLy//39/f//////////////////////+/v7/+jo6P+9vb3/lZWV/4aG
        hv5nZ2fhHh4ergAAAH4AAAAwAAAADQAAAAUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAcAAABCBAQEfDo6Oqlubm7cgICA94aGhvmWlpb5ra2t+bu7u/nDw8P5v7+/+bS0tPmgoKD5jIyM+YKC
        gvp4eHjvUFBQyxEREaEAAAB1AAAALgAAAAwAAAAFAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAUAAAAxAAAAbA4ODosrKyuhLCwspykpKaooKCitKCgorygoKLAoKCiwJycnsCgo
        KK8pKSmuKysrrRsbG6MBAQGLAAAAXQAAACEAAAAJAAAABAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAWAAAARwAAAG4AAACAAAAAhwAAAIoAAACMAAAAjgAA
        AI4AAACPAAAAjgAAAIsAAACBAAAAZQAAADUAAAAQAAAABQAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAGAAAADsAAABbAAAAcAAA
        AHwAAACCAAAAgQAAAHkAAABqAAAATwAAAC0AAAARAAAABQAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/+Af//8AA//8AAD/+AAAf/AAAD/gAAAfwAAAD4AAAAcAAAAHAAAAAwAA
        AAMAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAEAAAADAAAAA4AA
        AAeAAAAHwAAAD+AAAB/wAAA/+AAAf/4AAf8=
</value>
  </data>
</root>